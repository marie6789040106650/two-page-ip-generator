name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run type checking
      run: pnpm run type-check
    
    - name: Run linting
      run: pnpm run lint
    
    - name: Run tests
      run: pnpm run test:run
    
    - name: Build application
      run: pnpm run build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_BASE_URL: https://example.com

  build-docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: two-page-ip-generator:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  lighthouse:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build application
      run: pnpm run build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_BASE_URL: https://example.com
    
    - name: Start application
      run: pnpm start &
      env:
        PORT: 3000
    
    - name: Wait for application
      run: sleep 10
    
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          http://localhost:3000
          http://localhost:3000/generate
        configPath: './.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true